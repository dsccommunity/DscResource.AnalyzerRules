---
####################################################
#          ModuleBuilder Configuration             #
####################################################
CopyPaths:
  - en-US
Prefix: prefix.ps1
Suffix: suffix.ps1
Encoding: UTF8
VersionedOutputDirectory: true
BuiltModuleSubdirectory: builtModule

####################################################
#             HQRM Test Configuration              #
####################################################
DscTest:
  Pester:
    Configuration:
      Filter:
        Tag:
        ExcludeTag:
          - Common Tests - New Error-Level Script Analyzer Rules
      Output:
        Verbosity: Detailed
        CIFormat: Auto
      TestResult:
        Enabled: true
        OutputFormat: NUnitXML
        OutputPath: ./output/testResults/NUnitXml_DscResourceCommon_HQRM.xml
        OutputEncoding: UTF-8
        TestSuiteName: DscResourceCommonHQRM
  Script:
    ExcludeSourceFile:
      - output
    ExcludeModuleFile:
    MainGitBranch: master

ModuleBuildTasks:
  Sampler:
    - '*.build.Sampler.ib.tasks'
  Sampler.GitHubTasks:
    - '*.ib.tasks'
  DscResource.Test:
    - 'Task.*'
  DscResource.DocGenerator:
    - 'Task.*'

TaskHeader: |
  param($Path)
  ""
  "=" * 79
  Write-Build Cyan "`t`t`t$($Task.Name.replace("_"," ").ToUpper())"
  Write-Build DarkGray  "$(Get-BuildSynopsis $Task)"
  "-" * 79
  Write-Build DarkGray "  $Path"
  Write-Build DarkGray "  $($Task.InvocationInfo.ScriptName):$($Task.InvocationInfo.ScriptLineNumber)"
  ""

####################################################
#       Pipeline Configuration                     #
####################################################
BuildWorkflow:
  '.':
    - build
    - test

  build:
    - Clean
    - Build_Module_ModuleBuilder
    - Build_NestedModules_ModuleBuilder
    - Create_changelog_release_output
    - build_wiki

  build_wiki:
    - Generate_Wiki_Content
    - Generate_Conceptual_Help
    - Generate_Markdown_For_Public_Commands
    - Generate_External_Help_File_For_Public_Commands
    - Clean_Markdown_Of_Public_Commands
    - Generate_Wiki_Sidebar
    - Clean_Markdown_Metadata

  pack:
    - build
    - package_module_nupkg

  hqrmtest:
    - DscResource_Tests_Stop_On_Fail

  test:
    - Pester_Tests_Stop_On_Fail
    - Convert_Pester_Coverage
    - Pester_if_Code_Coverage_Under_Threshold

  merge:
    - Merge_CodeCoverage_Files

  publish:
    - Publish_Release_To_GitHub
    - Publish_Module_To_gallery
    - Publish_GitHub_Wiki_Content

####################################################
#          Pester Configuration (Sampler)          #
####################################################
Pester:
  Configuration:
    Run:
      Path:
        - tests/QA
        - tests/Unit
    Output:
      Verbosity: Detailed
      StackTraceVisibility: Full
      CIFormat: Auto
    CodeCoverage:
      CoveragePercentTarget: 80
      OutputEncoding: ascii
      UseBreakpoints: false
  ExcludeFromCodeCoverage:
    - tasks
    - Template
  ExcludeTag:
    - helpQuality

####################################################
#           Code Coverage Configuration            #
####################################################
CodeCoverage:
  CodeCoverageMergedOutputFile: JaCoCo_coverage.xml # the file that is created for the merged code coverage
  CodeCoverageFilePattern: Codecov*.xml # the pattern used to search all pipeline test job artifacts

####################################################
#              PSDepend Configuration              #
####################################################
Resolve-Dependency:
  Gallery: 'PSGallery'
  AllowPrerelease: false
  Verbose: false

####################################################
#               GitHub Configuration               #
####################################################
GitHubConfig:
  GitHubFilesToAdd:
    - 'CHANGELOG.md'
  GitHubConfigUserName: dscbot # cSpell: disable-line
  GitHubConfigUserEmail: dsccommunity@outlook.com
  UpdateChangelogOnPrerelease: false

####################################################
#      DscResource.DocGenerator Configuration      #
####################################################
DscResource.DocGenerator:
  Generate_Conceptual_Help:
    MarkdownCodeRegularExpression:
      - '\`(.+?)\`' # Match inline code-block
      - '\\(\\)' # Match escaped backslash
      - '\[[^\[]+\]\((.+?)\)' # Match markdown URL
      - '_(.+?)_' # Match Italic (underscore)
      - '\*\*(.+?)\*\*' # Match bold
      - '\*(.+?)\*' # Match Italic (asterisk)
  Publish_GitHub_Wiki_Content:
    Debug: true
  Generate_Wiki_Content:
    MofResourceMetadata:
      Type: MofResource
      Category: Resources
    ClassResourceMetadata:
      Type: ClassResource
      Category: Resources
    CompositeResourceMetadata:
      Type: CompositeResource
      Category: Resources
  Generate_Wiki_Sidebar:
    Debug: false
    AlwaysOverwrite: true
